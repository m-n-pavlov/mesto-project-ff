/* 1. üîê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø API */

const config = {
  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-42',
  headers: {
    authorization: 'c1561760-74b9-4d82-a9a8-3b49d68cea70',
    'Content-Type': 'application/json'
  }
};

/* 2. üì° –ü–†–û–í–ï–†–ö–ê –û–¢–í–ï–¢–ê –°–ï–†–í–ï–†–ê */

function checkResponse(res) {
  if (res.ok) {
    return res.json();
  }
  return Promise.reject(`–û—à–∏–±–∫–∞: ${res.status}`);
}

/* 3. üì¨ API-–ú–ï–¢–û–î–´ */

/* --- –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è --- */
export const getUserInfo = () => {
  return fetch(`${config.baseUrl}/users/me`, {
    headers: config.headers
  })
  .then(checkResponse);
};

/* --- –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏ --- */
export const getInitialCards = () => {
  return fetch(`${config.baseUrl}/cards`, {
    headers: config.headers
  })
  .then(checkResponse);
};

/* --- –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å --- */
export function updateProfile(data) {
  return fetch(`${config.baseUrl}/users/me`, {
    method: 'PATCH',
    headers: config.headers,
    body: JSON.stringify({
      name: data.name,
      about: data.about
    })
  })
  .then(checkResponse);
}

/* --- –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ä—Ç–æ—á–∫—É --- */
export function addCard(cardData) {
  return fetch(`${config.baseUrl}/cards`, {
    method: 'POST',
    headers: config.headers,
    body: JSON.stringify({
      name: cardData.name,
      link: cardData.link
    })
  })
  .then(checkResponse);
}

/* --- –£–¥–∞–ª–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É --- */
export const deleteCard = (cardId) => {
  return fetch(`${config.baseUrl}/cards/${cardId}`, {
    method: 'DELETE',
    headers: config.headers
  })
  .then(checkResponse);
};

/* --- –ü–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫ --- */
export const likeCard = (cardId) => {
  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {
    method: 'PUT',
    headers: config.headers
  })
  .then(checkResponse);
};

/* --- –°–Ω—è—Ç—å –ª–∞–π–∫ --- */
export const unlikeCard = (cardId) => {
  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {
    method: 'DELETE',
    headers: config.headers
  })
  .then(checkResponse);
};

/* --- –û–±–Ω–æ–≤–∏—Ç—å –∞–≤–∞—Ç–∞—Ä --- */
export function updateAvatar(avatarUrl) {
  return fetch(`${config.baseUrl}/users/me/avatar`, {
    method: 'PATCH',
    headers: config.headers,
    body: JSON.stringify({
      avatar: avatarUrl
    })
  })
  .then(checkResponse);
}
